@model INTEX.Models.ViewModels.ProductsListViewModel

@{
    ViewData["Title"] = "Products";
}

<h1>Products</h1>

<form method="get" action="@Url.Action("Products", "Home")">
    <label for="productsPerPage">Results Per Page:</label>
    <select id="productsPerPage" name="productsPerPage">
        <option value="5" selected="@((Model.PaginationInfo.ItemsPerPage == 5).ToString().ToLower())">5</option>
        <option value="10" selected="@((Model.PaginationInfo.ItemsPerPage == 10).ToString().ToLower())">10</option>
        <option value="20" selected="@((Model.PaginationInfo.ItemsPerPage == 20).ToString().ToLower())">20</option>
    </select>

    <label for="category">Filter by Category:</label>
    <select name="category" id="category">
        <option value="">All</option>
        <option value="Electronics">Electronics</option>
        <option value="Clothing">Clothing</option>
        <!-- Add other categories as needed -->
    </select>

    <label for="color">Filter by Color:</label>
    <select name="color" id="color">
        <option value="">All</option>
        <option value="Red">Red</option>
        <option value="Blue">Blue</option>
        <!-- Add other colors as needed -->
    </select>

    <button type="submit">Apply Filters</button>
</form>

@foreach (var product in Model.Products)
{
    <div class="product">
        <h2>@product.Name</h2>
        <img src="@product.ImgLink" alt="@product.Name" />
        <p>@product.Description</p>
        <p>Price: $@product.Price</p>
        <form method="post" action="@Url.Action("AddToCart", "Cart")">
            <input type="hidden" name="productId" value="@product.Id" />
            <button type="submit">Add to Cart</button>
        </form>
        <a href="@Url.Action("ProductDetails", "Home", new { productId = product.Id })">View Details</a>
    </div>
}

@{
    var totalPages = Model.PaginationInfo.TotalNumPages;
    var currentPage = Model.PaginationInfo.CurrentPage + 1;
}

@if (totalPages > 1)
{
    <div class="pagination">
        @if (currentPage > 1)
        {
            <a href="@Url.Action("Products", "Home", new { page = currentPage - 1, productsPerPage = Model.PaginationInfo.ItemsPerPage })">Previous</a>
        }

        @for (var i = 1; i <= totalPages; i++)
        {
            <a href="@Url.Action("Products", "Home", new { page = i, productsPerPage = Model.PaginationInfo.ItemsPerPage })" @(i == currentPage ? "class=active" : "")>@i</a>
        }

        @if (currentPage < totalPages)
        {
            <a href="@Url.Action("Products", "Home", new { page = currentPage + 1, productsPerPage = Model.PaginationInfo.ItemsPerPage })">Next</a>
        }
    </div>
}

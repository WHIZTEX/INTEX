@model ProductsListViewModel

@{
    ViewData["Title"] = "Products";
}

<div class="products-page-styles">
    <style>
        .products-page-styles .product-box img {
            width: 400px;
            height: 600px;
            object-fit: contain;
            border-radius: 20px 20px 0 0;
        }

        .products-page-styles .yellow-box {
            background-color: #f4dc7a;
            padding: 20px 30px;
            border-radius: 20px 20px 0 0;
            text-align: center;
            height: 30px; /* Set fixed height */
            overflow: hidden;
            white-space: nowrap; /* Ensure title is only one line */
            text-overflow: ellipsis; /* Add ellipsis if text overflows */
            display: flex;
            justify-content: center; /* Center horizontally */
            align-items: center; /* Center vertically */
            font-size: 1.2em; /* Increase font size for title */
        }

        .products-page-styles .bottom-buttons {
            padding: 10px 20px;
            display: flex;
            justify-content: space-between; /* Distribute buttons horizontally */
            align-items: center; /* Center align buttons vertically */
        }

            .products-page-styles .bottom-buttons p {
                margin: 0;
            }

            .products-page-styles .bottom-buttons button,
            .products-page-styles .bottom-buttons a {
                padding: 5px 10px;
                background-color: white;
                border: 1px solid black;
                border-radius: 5px;
                text-decoration: none;
                color: black;
            }

        /* New CSS for the title and filter */
        .products-page-styles .title-container {
            text-align: center; /* Center align the title */
        }

        .products-page-styles .filter-container select {
            padding: 8px;
            border: 1px solid #ccc; /* Light grey border */
            border-radius: 5px;
            margin: 0 10px;
        }

        .products-page-styles .filter-container button {
            padding: 8px 20px;
            background-color: #f4dc7a; /* Green button color */
            border: none;
            border-radius: 5px;
            color: white;
            cursor: pointer;
        }

            .products-page-styles .filter-container button:hover {
                background-color: #f4dc7a; /* Darker green on hover */
            }

        /* Updated container styles */
        .products-page-styles .container {
            margin-top: 40px;
            margin-bottom:60px;
            padding-bottom: 60px;
            width: 100%;
            bottom:100px;
        }

        .products-page-styles .product-box {
            width: calc(33% - 20px); /* Adjust the width to fit four items per row */
            margin-right: 20px; /* Add right margin to create gap between items */
            margin-bottom: 20px; /* Add bottom margin to create gap between rows */
            border-radius: 20px;
            overflow: hidden;
            background-color: white;
            box-shadow: 0 12px 20px rgba(0, 0, 0, 0.25), 0 -12px 20px rgba(0, 0, 0, 0.25);
            float: left; /* Float items left for inline display */
        }

        /* New CSS for the filters container */
        .products-page-styles .filter-container {
            margin-top: 20px;
            padding: 10px;
            border-radius: 10px;
            background: linear-gradient(to right, #82abd5, #bad8f4);
            box-shadow: 0 12px 20px rgba(0, 0, 0, 0.25), 0 -12px 20px rgba(0, 0, 0, 0.25); /* Shadows on top and bottom */
            display: flex;
            justify-content: center; /* Center horizontally */
            align-items: center; /* Center vertically */
            width: calc(100% - 40px); /* Take up full width minus padding */
            margin-left: auto;
            margin-right: auto;
        }

        /* Navbar Styles */
        .products-page-styles .navbar {
            display: flex;
            justify-content: center;
            align-items: center;
            background-color: #f4dc7a; /* Yellow background for navbar */
            position:static; /* Fixed position */
            bottom: 60px; /* Align to the bottom */
            width: 100%; /* Full width */
            text-align:center;
            align-content:center;
            height:60px;
        }
    </style>
</div>

<div class="title-container">
    <h1 class="display-4" style="font-weight:900; color:#EDD146; text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.5);">Products</h1>
</div>

<div class="filter-container">
    <form method="get" action="@Url.Action("Products", "Home")">
        <div class="form-group">
            <label for="category">Filter by Category:</label>
            <select name="category" id="category">
                <option value="">All</option>
                <option value="Electronics">Electronics</option>
                <option value="Clothing">Clothing</option>
                <!-- Add other categories as needed -->
            </select>

            <label for="color">Filter by Color:</label>
            <select name="color" id="color">
                <option value="">All</option>
                <option value="Red">Red</option>
                <option value="Blue">Blue</option>
                <!-- Add other colors as needed -->
            </select>

            <button type="submit" class="btn btn-primary">Apply Filters</button>
        </div>
    </form>
</div>

    <div class="container">
    @foreach (var product in Model.Products)
    {
        <div class="product-box">
            <div class="yellow-box">@product.Name</div>
            <img src="@product.ImgLink" alt="@product.Name" />
            <div class="bottom-buttons">
                <p>Price: $@product.Price</p>
                <a asp-controller="Cart" asp-action="AddToCart" asp-route-productId="@product.Id" formmethod="get">Add to Cart</a>
                <a href="@Url.Action("ProductDetails", "Home", new { productId = product.Id })">View Details</a>
                    
            </div>
        </div>
    }

</div>

 <div class="navbar">
@if (Model.PaginationInfo.TotalNumPages > 1)
{
    <div class="pagination", class="navbar">
        <ul class="pagination">
            @for (var i = 1; i <= Model.PaginationInfo.TotalNumPages; i++)
            {
                <li class="page-item @(i == Model.PaginationInfo.CurrentPage ? "active" : "")">
                    <a class="page-link" href="@Url.Action("Products", "Home", new { page = i })">Page @i</a>
                </li>
            }
        </ul>
    </div>
}
</div>

@section scripts {
    <script>
        // JavaScript for filtering
        document.getElementById('category').addEventListener('change', function () {
            var selectedCategory = this.value;
            // Append the selected category to the URL
            window.location.href = '@Url.Action("Products", "Home")' + '?category=' + selectedCategory;
        });

        document.getElementById('color').addEventListener('change', function () {
            var selectedColor = this.value;
            // Append the selected color to the URL
            window.location.href = '@Url.Action("Products", "Home")' + '?color=' + selectedColor;
        });
    </script>
}